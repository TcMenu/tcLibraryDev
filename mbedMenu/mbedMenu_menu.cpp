/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
*/

#include <mbed.h>
#include <tcMenu.h>
#include "mbedMenu_menu.h"

// Global variable declarations

const PROGMEM ConnectorLocalInfo applicationInfo = { "MBed Test", "98ea360b-fe08-444a-996b-2e94dda7a2eb" };
LiquidCrystal lcd(0, 1, 2, 4, 5, 6, 7);
LiquidCrystalRenderer renderer(lcd, 20, 4);
MBedAnalogDevice analogDevice;

// Global Menu Item declarations

const BooleanMenuInfo minfoUserButton = { "User button", 4, 0xFFFF, 1, onUserButton, NAMING_TRUE_FALSE };
BooleanMenuItem menuUserButton(&minfoUserButton, false, NULL);
const AnalogMenuInfo minfoAnalogValue = { "Analog Value", 2, 0xFFFF, 100, NO_CALLBACK, 0, 0, "" };
AnalogMenuItem menuAnalogValue(&minfoAnalogValue, 0, &menuUserButton);
RENDERING_CALLBACK_NAME_INVOKE(fnRTCDateRtCall, timeItemRenderFn, "RTC Date", -1, NO_CALLBACK)
DateFormattedMenuItem menuRTCDate(fnRTCDateRtCall, 3, &menuAnalogValue);
RENDERING_CALLBACK_NAME_INVOKE(fnRTCTimeRtCall, timeItemRenderFn, "RTC Time", -1, NO_CALLBACK)
TimeFormattedMenuItem menuRTCTime(fnRTCTimeRtCall, 1, (MultiEditWireType)EDITMODE_TIME_12H, &menuRTCDate);


// Set up code

void setupMenu() {


    lcd.setIoAbstraction(ioFrom8574(0x40, 0xff, &i2c));
    lcd.begin(20, 4);
    lcd.configureBacklightPin(3);
    lcd.backlight();
    switches.initialise(internalDigitalIo(), true);
    switches.addSwitch(A1, NULL);
    switches.onRelease(A1, [](pinid_t /*key*/, bool held) {
            menuMgr.onMenuSelect(held);
        });
    setupAnalogJoystickEncoder(&analogDevice, A0, [](int val) {
            menuMgr.valueChanged(val);
        });
    menuMgr.initWithoutInput(&renderer, &menuRTCTime);
    remoteServer.begin(3333, &applicationInfo);
}
